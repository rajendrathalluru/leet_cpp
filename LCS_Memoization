class Solution {
    public int lcs(String text1, String text2, int x,int y, int [][]memo){
        if(x==0||y==0){
            return 0;
        }
        if(memo[x][y]!=-1){
            return memo[x][y];
        }
        if(text1.charAt(x-1)==text2.charAt(y-1)){
            return memo[x][y]=1+lcs(text1,text2,x-1,y-1,memo);
        }
        else{
            return memo[x][y]= Math.max(lcs(text1,text2,x-1,y,memo),lcs(text1,text2,x,y-1,memo));
        }
    }
    public int longestCommonSubsequence(String text1, String text2) {
        int x=text1.length();
        int y=text2.length();
        int [][] memo=new int[x+1][y+1];
        for(int i=0;i<=x;i++){
            for(int j=0;j<=y;j++){
                memo[i][j]=-1;
            }
        }
       return lcs(text1,text2,x,y,memo);
    }
        
}
